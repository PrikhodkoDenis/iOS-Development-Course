/*
 Урок 11 Замыкания
 1. Написать функцию, которая ничего не возвращает и принимает только один клоужер, который ничего не принимает и ничего не возвращает . Функция должна просто посчитать от 1 до 10 в цикле и после этого вызвать клоужер. Добавьте println в каждый виток цикла и в клоужер и проследите за очередностью выполнения команд.
 2. Используя метод массивов sorted, отсортируйте массив интов по возрастанию и убыванию. Пример показан в методичке.
 3. Напишите функцию, которая принимает массив интов и клоужер и возвращает инт. Клоужер должен принимать 2 инта (один опшинал) и возвращать да или нет. В самой функции создайте опшинал переменную. Вы должны пройтись в цикле по массиву интов и сравнивать элементы с переменной используя клоужер. Если клоужер возвращает да, то вы записываете значение массива в переменную. В конце функции возвращайте переменную.
 Используя этот метод и этот клоужер найдите максимальный и минимальный элементы массива.
 4. Создайте произвольную строку. Преобразуйте ее в массив букв. Используя метод массивов sorted отсортируйте строку так, чтобы вначале шли гласные в алфавитном порядке, потом согласные, потом цифры, а потом символы.
 5. Проделайте задание №3 но для нахождения минимальной и максимальной буквы из массива букв (соответственно скалярному значению).
 */

//1. Написать функцию, которая ничего не возвращает и принимает только один клоужер, который ничего не принимает и ничего не возвращает . Функция должна просто посчитать от 1 до 10 в цикле и после этого вызвать клоужер. Добавьте println в каждый виток цикла и в клоужер и проследите за очередностью выполнения команд.

func counter(emptyClosure: ()-> Void) -> Void {
    for i in 1...10 {
        print("Number of count is - \(i)")
    }
    
    emptyClosure()
    print("Just letters - abcdefgh")
}

counter {
    print("Just numbers - 123456789")
}

//2. Используя метод массивов sorted, отсортируйте массив интов по возрастанию и убыванию. Пример показан в методичке.

let numbers = [1,9,5,7,4,63,85,47,52,69,85,21,4,7,5,2,3,6,5,44,7,8,9,66,5,1,2,2]

numbers
    .sorted(by: <)

numbers
    .sorted(by: >)

//3. Напишите функцию, которая принимает массив интов и клоужер и возвращает инт. Клоужер должен принимать 2 инта (один опшинал) и возвращать да или нет. В самой функции создайте опшинал переменную. Вы должны пройтись в цикле по массиву интов и сравнивать элементы с переменной используя клоужер. Если клоужер возвращает да, то вы записываете значение массива в переменную. В конце функции возвращайте переменную. Используя этот метод и этот клоужер найдите максимальный и минимальный элементы массива.()

func minMax(array: [Int], closure: (Int?, Int) -> Bool) -> Int {
    var number: Int?
    for value in array {
        if closure(number, value) {
            number = value
        }
    }
    return number ?? 0
}

let min =
    minMax(array: numbers) { $0 == nil || $0! > $1 }

let max =
    minMax(array: numbers) { $0 == nil || $0! < $1 }



//4. Создайте произвольную строку. Преобразуйте ее в массив букв. Используя метод массивов sorted отсортируйте строку так, чтобы вначале шли гласные в алфавитном порядке, потом согласные, потом цифры, а потом символы.

let unsortedText = "qwertyuiopasdfghjklzxcvbnm0987654321.,-_!?<>/'|;:[]{}"

var oneMoreText = [String]()

for letter in unsortedText {
    oneMoreText.append(String(letter))
}

oneMoreText

let convertedText = Array(unsortedText)

func transform(text: [String]) -> [String] {
    var result:  [String] = []
    var result1: [String] = []
    var result2: [String] = []
    var result3: [String] = []
    for letter in text {
        switch letter {
        case "a", "e", "i", "o", "y", "u":
            result += [letter]
        case "b", "c", "d", "f", "g", "h", "j", "k", "l", "m", "n", "p", "q", "r", "s", "t", "v", "w", "x", "z":
            result1 += [letter]
        case "0", "1", "2", "3", "4", "5", "6", "7", "8", "9":
            result2 += [letter]
        case ".", "-", "_", "!", "?", "<", ">", "/", "'", "|", ";", ":", "[", "]", "{", "}":
            result3 += [letter]
        default:
            break
        }
    }
    
    return result.sorted() + result1.sorted() + result2.sorted() + result3.sorted()
}

let sortedText = transform(text: oneMoreText)
print("\(sortedText)")

//5. Проделайте задание №3 но для нахождения минимальной и максимальной буквы из массива букв (соответственно скалярному значению)

let alphabet = "abcdefghijklmnopqrstuvwxyz"
let convertedAlphabet = Array(alphabet)

func minMaxLetter(text: [Character], closure: (Character?, Character) -> Bool) -> Character {
    var char: Character?
    for letter in text {
        if closure(char, letter) {
            char = letter
        }
    }
    
    return char ?? "a"
}

let minLetter =
    minMaxLetter(text: convertedAlphabet) { $0 == nil || $0! > $1 }

let maxLetter =
    minMaxLetter(text: convertedAlphabet) { $0 == nil || $0! < $1 }
