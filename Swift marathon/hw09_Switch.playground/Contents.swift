import UIKit

/*
 Домашнее задание № 9 Switch
 
 1. Создать строку произвольного текста, минимум 200 символов. Используя цикл и оператор свитч посчитать количество гласных, согласных, цифр и символов.
 2. Создайте свитч который принимает возраст человека и выводит описание жизненного этапа.
 3. У вас есть имя отчество и фамилия студента (русские буквы). Имя начинается с А или О, то обращайтесь к студенту по имени, если же нет, то если у него отчество начинается на В или Д, то обращайтесь к нему по имени и отчеству, если же опять нет, то в случае если фамилия начинается с Е или З, то обращайтесь к нему только по фамилии. В противном случае обращайтесь к нему по полному имени.
 4. Представьте что вы играете в морской бои и у вас осталось некоторое количество кораблей на поле 10Х10 (можно буквы и цифры, а можно только цифры). Вы должны создать свитч, который примет тюпл с координатой и выдаст один из вариантов: мимо, ранил, убил.
 */


//1. Создать строку произвольного текста, минимум 200 символов.

let text = "Метод reduce(_:_:) позволяет объединить все элементы коллекции в одно значение в соответствии с переданным замыканием. Помимо самих элементов метод принимает первоначальное значение, которое служит для выполнения операции с первым элементом коллекции. Предположим, необходимо определить общее количество имеющихся у вас денег. На вашей карте 210 рублей, а в кошельке 4 купюры разного достоинства. Эта задача легко решается с помощью метода reduce(_:_:) (рис. 14.3 и листинг 14.13). Листинг 14.13let cash = [10, 50, 100, 500] let total = cash.reduce(210, +) // 870 Первый аргумент — это начальное значение, второй — замыкание, обрабатывающее каждую пару элементов. Первая операция сложения производится между начальным значением и первым элементом массива cash. Результат этой операции складывается со вторым элементом массива и т. д. Замыкание, производящее операцию, может быть произвольным — главное, чтобы оно обрабатывало операцию для двух входящих параметров (листинг 14.14).284 Глава 14. Дополнительные возможности Рис. 14.3. Принцип работы метода reduce Листинг 14.14 let multiTotal = cash.reduce(210, { $0 * $1 }) multiTotal // 5250000000 let totalThree = cash.reduce(210, {a,b in a-b}) totalThree // -450 Чтобы было легче запомнить: если в reduce в качестве второго аргумента передан оператор, то он просто расставляется между элементами коллекции: cash.reduce(210, +) = 210 + 10 + 50 + 100 + 500"

text.count

//Используя цикл и оператор свитч посчитать количество гласных, согласных, цифр и символов.

var sumVowels = 0
var sumConsonants = 0
var sumNumbers = 0
var sumSigns = 0

for char in text.lowercased() {
    switch char {
    case "а", "у", "о", "и", "э", "ы", "ё", "е", "я", "ю":
        sumVowels += 1
    case "б", "в", "г", "д", "ж", "з", "й", "к", "л", "м", "н", "п", "р", "с", "т", "ф", "х", "ц", "ч", "ш", "щ", "ь", "ъ":
        sumConsonants += 1
    case "0", "1","2", "3", "4", "5", "6", "7", "8", "9":
        sumNumbers += 1
    default:
        sumSigns += 1
    }
}

sumVowels
sumConsonants
sumNumbers
sumSigns

var summary = sumVowels + sumConsonants + sumNumbers + sumSigns
summary == text.count

// 2. Создайте свитч который принимает возраст человека и выводит описание жизненного этапа

var age = 33

switch age {
case 0..<1:
    print("Младенчество")
case 1..<3:
    print("Раннее детство")
case 3..<7:
    print("Дошкольный возраст")
case 7..<13:
    print("Школьный возраст")
case 13..<19:
    print("Юность")
case 19..<35:
    print("Молодость")
case 35..<60:
    print("Зрелость")
case 60...:
    print("Старость")
default:break
}

//3. У вас есть имя отчество и фамилия студента (русские буквы). Если имя начинается с А или О, то обращайтесь к студенту по имени, если же нет, то если у него отчество начинается на В или Д, то обращайтесь к нему по имени и отчеству, если же опять нет, то в случае если фамилия начинается с Е или З, то обращайтесь к нему только по фамилии. В противном случае обращайтесь к нему по полному имени.

// У вас есть имя отчество и фамилия студента (русские буквы).

let surname = "Приходько"
let name = "Денис"
let secondName = "Сергеевич"

let tuple = (surname, name, secondName)

switch tuple {
case (_, name, _) where name.first == "А" || name.first == "О" :
    print("Привет \(name)")
case (_, _, secondName) where secondName.first == "В" || secondName.first == "Д" :
    print("Привет \(name) \(secondName)")
case (surname, _, _) where surname.first == "Е" || surname.first == "З" :
    print("Привет \(surname)")
default:
    print("Привет \(name) \(secondName) \(surname)")
}

//4. Представьте что вы играете в морской бои и у вас осталось некоторое количество кораблей на поле 10Х10 (можно буквы и цифры, а можно только цифры). Вы должны создать свитч, который примет тюпл с координатой и выдаст один из вариантов: мимо, ранил, убил.

var letter = "а"
var number = 1

let coordinates = (letter.uppercased(), number)

switch coordinates {
case ("А", 10), ("Г", 9), ("Е", 9), ("Ж", 6):
    print("Убил")
case ("Ж"..."К", 1), ("Г", 1...3), ("Б", 5...7), ("А"..."Б", 1), ("К", 3...4), ("И", 9...10):
    print("Ранил")
default:
    print("Мимо")
}
